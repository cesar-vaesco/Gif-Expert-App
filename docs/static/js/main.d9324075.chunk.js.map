{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategorie","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAIaA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,mCACI,sBAAMC,SAZM,SAACC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBU,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,eA0B/BZ,EAAae,WAAa,CACtBd,cAAee,IAAUC,KAAKC,Y,mCCpCrBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAKFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAfvB,kBAoBZM,GApBY,4CAAH,sDCAPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAIlC,OACI,sBAAKc,UAAU,+CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,mBAAGI,UAAU,mCAAb,SAAkDJ,QCJjDO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAKtB,ECNwB,SAACA,GAGzB,MAA4BlB,mBAAS,CACjCyB,KAAM,GACNa,SAAS,IAFb,mBAAQC,EAAR,KAAeC,EAAf,KAqBI,OAhBJC,qBAAU,WAEFxB,EAASC,GACJwB,MAAM,SAAAC,GAICH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAK1B,CAAEpB,IAEEqB,EDlBsBK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAQrB,OACI,qCACI,qBAAIJ,UAAU,kCAAd,cAAmDhB,KAElDoB,GAAW,6CAEZ,qBAAKJ,UAAU,YAAf,SAGYH,EAAOJ,KAAK,SAAEC,GAAF,OACZ,cAAC,EAAD,eAEIA,GADIA,EAAIC,aEvBvBgB,EAAe,WAExB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAQA,OACI,qCACI,8CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBACA,6BAEQ+C,EAAWnB,KAAI,SAAAT,GAAQ,OAEnB,cAAC,EAAD,CAEAA,SAAYA,GADLA,Y,MCpB/B6B,IAASC,OAEL,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.d9324075.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\n\n//usando desestructuraciÃ³n para cargar las props\nexport const AddCategorie = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n\n    const handleInputChange = (e) => {\n        //console.log(e.target.value);\n        setInputValue(e.target.value);\n    };\n\n    const handleSumit = (e) => {\n        e.preventDefault();\n\n        if(inputValue.trim().length > 2){\n\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSumit}>\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={handleInputChange}\n                />\n            </form>\n        </>\n    )\n}\n\nAddCategorie.protoTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\n\nexport const getGifs = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=7lB878Nhu3ZkNDikahV5dr03vHbNXJkU`;\n\n    const resp = await fetch(url);\n\n    const { data } = await resp.json();\n\n\n\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n\n    return gifs;\n};\n","import React from 'react'\n\nexport const GifGridItem = ( { title, url } ) => {\n\n    // console.log( id, title, url );\n\n    return (\n        <div className=\"card animate__animated animate__bounceInDown\">\n            <img src={ url } alt={ title }/>\n            <p className=\"animate__animated animate__flash\">{ title }</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n// import { getGifs } from '../helpers/getGifs';\n import { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n\n    // const [images, setImages] = useState([]);\n\n    const { data:images, loading } = useFetchGifs( category );\n\n    //console.log({ loading });\n\n\n\n\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__tada\"> { category }</h3>\n\n            {loading && <p> Loading... </p>}\n\n            <div className=\"card-grid\">\n\n                    {\n                        images.map( ( img )=>\n                        <GifGridItem\n                        key = { img.id }\n                        {...img }\n                        />\n                        )\n                    }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (category) => {\n\n\n    const [ state, setState ] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n\n            getGifs( category )\n                .then( imgs => {\n\n                        //console.log(imgs);\n\n                        setState({\n                            data: imgs,\n                            loading: false\n                        });\n\n\n                })\n        }, [ category ]);\n\n        return state;\n}\n","\nimport React, { useState } from 'react';\nimport { AddCategorie } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    // const handleAdd = () => {\n    //     ///setcategorias(['HunterXHunter', ...categorias]);\n    //     setcategorias(cats => {return [...cats, 'HunterXHunter']});\n    // }\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategorie setCategories={setCategories} />\n            <hr />\n            <ol>\n                {\n                    categories.map(category => (\n\n                        <GifGrid\n                        key = {category}\n                        category = {category}\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n    document.getElementById('root')\n);\n"],"sourceRoot":""}